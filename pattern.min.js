!function(g,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.Pattern=I():g.Pattern=I()}(window,function(){return function(g){var I={};function t(C){if(I[C])return I[C].exports;var n=I[C]={i:C,l:!1,exports:{}};return g[C].call(n.exports,n,n.exports,t),n.l=!0,n.exports}return t.m=g,t.c=I,t.d=function(g,I,C){t.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:C})},t.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},t.t=function(g,I){if(1&I&&(g=t(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var C=Object.create(null);if(t.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var n in g)t.d(C,n,function(I){return g[I]}.bind(null,n));return C},t.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return t.d(I,"a",I),I},t.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},t.p="",t(t.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Tile.defaults.js\n/* harmony default export */ var Tile_defaults = ({\n    id: '', // Required\n    rotation: [], // [0, 90, 180], or [{from: 0, to: 360}]\n    width: 0,\n    height: 0,\n});\n// CONCATENATED MODULE: ./src/utility/utility.js\nconst random = (from, to) => (\n    Math.floor((Math.random() * Math.abs(to - from)) + Math.min(from, to))\n);\n// CONCATENATED MODULE: ./src/utility/index.js\n\n// CONCATENATED MODULE: ./src/Tile.js\n\n\n\nclass Tile_Tile {\n\n    constructor(element, options = {}) {\n        this.element = element;\n        this.options = {...Tile_defaults, ...options};\n    }\n\n    create(x, y) {\n        const element = this.element.cloneNode(true);\n        const {width, height} = this.options;\n        element.style.setProperty('transform-origin', `${width/2}px ${height/2}px`);\n        element.style.setProperty('transform', `translate(${x * width}px, ${y * height}px) rotate(${[0, 90][random(0, 2)]}deg)`);\n        element.setAttribute('data-pattern', [x, y]);\n        return element;\n    }\n}\n// CONCATENATED MODULE: ./src/Target.defaults.js\n/* harmony default export */ var Target_defaults = ({\n    tileWidth: 0,\n    tileHeight: 0,\n});\n// CONCATENATED MODULE: ./src/Target.js\n\n\nclass Target_Target {\n    \n    constructor(element, options = {}) {\n        this.element = element;\n        this.tiles = [];\n        this.pool = [];\n        this.options = {...Target_defaults, ...options};\n    }\n\n    registerTile(tile) {\n        this.pool.push(tile);\n    }\n\n    getRandomTile() {\n        const {pool} = this;\n        return pool[Math.floor(Math.random() * pool.length)];\n    }\n\n    drawTile(tile, row, col) {\n        this.tiles[row][col] = tile.create(col, row);\n        this.element.appendChild(this.tiles[row][col]);\n    }\n\n    eraseTile(row, col) {\n        this.element.removeChild(this.tiles[row][col]);\n        this.tiles[row].splice(col, 1);\n    }\n\n    addRow() {\n        const {rows, cols} = this.getCurrentTileCount();\n        this.tiles.push([]);\n        for (let col = 0; col < cols; col++) {\n            const tile = this.getRandomTile();\n            this.drawTile(tile, rows, col);\n        }\n    }\n\n    removeRow() {\n        const {rows, cols} = this.getCurrentTileCount();\n        for (let col = cols - 1; col >= 0; col--) {\n            this.eraseTile(rows - 1, col);\n        }\n        this.tiles.splice(rows - 1, 1);\n    }\n\n    addColumn() {\n        const {rows, cols} = this.getCurrentTileCount();\n        for (let row = 0; row < rows; row++) {\n            const tile = this.getRandomTile();\n            this.drawTile(tile, row, cols);\n        }\n    }\n\n    removeColumn() {\n        const {rows, cols} = this.getCurrentTileCount();\n        for (let row = rows - 1; row >= 0; row--) {\n            this.eraseTile(row, cols - 1);\n        }\n    }\n\n    getTargetTileCount() {\n        const {width, height} = this.element.getBoundingClientRect();\n        return {\n            cols: Math.ceil(width / this.options.tileWidth), // Horizontal\n            rows: Math.ceil(height / this.options.tileHeight), // Vertical\n        };\n    }\n\n    getCurrentTileCount() {\n        const rows = this.tiles.length;\n\n        return {\n            cols: rows > 0 ? this.tiles[0].length : 0,\n            rows,\n        }\n    }\n\n    refresh() {\n        const {cols: tCols, rows: tRows} = this.getTargetTileCount();\n        const {cols: cCols, rows: cRows} = this.getCurrentTileCount();\n\n        if (tRows > cRows) {\n            for (let row = cRows; row < tRows; row++) {\n                this.addRow();\n            }\n        }\n\n        if (tRows < cRows) {\n            for (let row = tRows; row < cRows; row++) {\n                this.removeRow();\n            }\n        }\n\n        if (tCols > cCols) {\n            for (let col = cCols; col < tCols; col++) {\n                this.addColumn();\n            }\n        }\n\n        if (tCols < cCols) {\n            for (let col = tCols; col < cCols; col++) {\n                this.removeColumn();\n            }\n        }\n    }\n}\n// CONCATENATED MODULE: ./src/Pattern.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Pattern_Pattern; });\n\n\n\nclass Pattern_Pattern {\n\n    constructor(target) {\n        this.target = new Target_Target(target, {tileWidth: 100, tileHeight: 100});\n    }\n\n    addTile(tile) {\n        this.target.registerTile(new Tile_Tile(tile, {height: 100, width: 100}));\n    }\n\n    removeTile(id) {\n        this.target.deregisterTile(id);\n    }\n\n    render() {\n        const {target} = this;\n        const {cols: tCols, rows: tRows} = target.getTargetTileCount();\n        const {cols: cCols, rows: cRows} = target.getCurrentTileCount();\n\n        if (tRows > cRows) {\n            for (let row = cRows; row < tRows; row++) {\n                target.addRow();\n            }\n        }\n\n        if (tRows < cRows) {\n            for (let row = tRows; row < cRows; row++) {\n                target.removeRow();\n            }\n        }\n\n        if (tCols > cCols) {\n            for (let col = cCols; col < tCols; col++) {\n                target.addColumn();\n            }\n        }\n\n        if (tCols < cCols) {\n            for (let col = tCols; col < cCols; col++) {\n                target.removeColumn();\n            }\n        }\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}])});